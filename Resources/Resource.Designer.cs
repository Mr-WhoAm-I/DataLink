//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLink.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataLink.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot access the CSV file..
        /// </summary>
        internal static string Error_CsvFileAccess {
            get {
                return ResourceManager.GetString("Error_CsvFileAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} records were not processed. Reason: the number of fields does not match the expected.
        ///.
        /// </summary>
        internal static string Error_CsvPartialWarning {
            get {
                return ResourceManager.GetString("Error_CsvPartialWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database connection failed..
        /// </summary>
        internal static string Error_DbConnection {
            get {
                return ResourceManager.GetString("Error_DbConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error occurred while preparing data for export..
        /// </summary>
        internal static string Error_ExportData {
            get {
                return ResourceManager.GetString("Error_ExportData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to create or save the export file..
        /// </summary>
        internal static string Error_ExportFile {
            get {
                return ResourceManager.GetString("Error_ExportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Insufficient permissions to write to the selected folder..
        /// </summary>
        internal static string Error_ExportFileAccess {
            get {
                return ResourceManager.GetString("Error_ExportFileAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File is open in another program..
        /// </summary>
        internal static string Error_ExportFileOpen {
            get {
                return ResourceManager.GetString("Error_ExportFileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid file format..
        /// </summary>
        internal static string Error_ExportFormat {
            get {
                return ResourceManager.GetString("Error_ExportFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not enough memory to export large data..
        /// </summary>
        internal static string Error_ExportMemory {
            get {
                return ResourceManager.GetString("Error_ExportMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No data available to export..
        /// </summary>
        internal static string Error_ExportNoData {
            get {
                return ResourceManager.GetString("Error_ExportNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unexpected error occurred..
        /// </summary>
        internal static string Error_Generic {
            get {
                return ResourceManager.GetString("Error_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid date format in CSV..
        /// </summary>
        internal static string Error_InvalidDate {
            get {
                return ResourceManager.GetString("Error_InvalidDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start date cannot be later than end date..
        /// </summary>
        internal static string Error_InvalidDateRange {
            get {
                return ResourceManager.GetString("Error_InvalidDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Text field contains invalid characters..
        /// </summary>
        internal static string Error_InvalidTextField {
            get {
                return ResourceManager.GetString("Error_InvalidTextField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export canceled by user..
        /// </summary>
        internal static string Export_Canceled {
            get {
                return ResourceManager.GetString("Export_Canceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Canceled.
        /// </summary>
        internal static string Export_CanceledTitle {
            get {
                return ResourceManager.GetString("Export_CanceledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data successfully exported..
        /// </summary>
        internal static string Export_Success {
            get {
                return ResourceManager.GetString("Export_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City.
        /// </summary>
        internal static string Header_City {
            get {
                return ResourceManager.GetString("Header_City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Country.
        /// </summary>
        internal static string Header_Country {
            get {
                return ResourceManager.GetString("Header_Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date.
        /// </summary>
        internal static string Header_Date {
            get {
                return ResourceManager.GetString("Header_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на First Name.
        /// </summary>
        internal static string Header_FirstName {
            get {
                return ResourceManager.GetString("Header_FirstName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last Name.
        /// </summary>
        internal static string Header_LastName {
            get {
                return ResourceManager.GetString("Header_LastName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Middle Name.
        /// </summary>
        internal static string Header_SurName {
            get {
                return ResourceManager.GetString("Header_SurName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import canceled by user.
        /// </summary>
        internal static string Import_Canceled {
            get {
                return ResourceManager.GetString("Import_Canceled", resourceCulture);
            }
        }
    }
}
