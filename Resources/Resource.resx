<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_CsvFileAccess" xml:space="preserve">
    <value>Cannot access the CSV file.</value>
  </data>
  <data name="Error_CsvPartialWarning" xml:space="preserve">
    <value>{0} records were not processed. Reason: the number of fields does not match the expected.
</value>
  </data>
  <data name="Error_DbConnection" xml:space="preserve">
    <value>Database connection failed.</value>
  </data>
  <data name="Error_ExportData" xml:space="preserve">
    <value>Error occurred while preparing data for export.</value>
  </data>
  <data name="Error_ExportFile" xml:space="preserve">
    <value>Failed to create or save the export file.</value>
  </data>
  <data name="Error_ExportFileAccess" xml:space="preserve">
    <value>Insufficient permissions to write to the selected folder.</value>
  </data>
  <data name="Error_ExportFileOpen" xml:space="preserve">
    <value>File is open in another program.</value>
  </data>
  <data name="Error_ExportFormat" xml:space="preserve">
    <value>Invalid file format.</value>
  </data>
  <data name="Error_ExportMemory" xml:space="preserve">
    <value>Not enough memory to export large data.</value>
  </data>
  <data name="Error_ExportNoData" xml:space="preserve">
    <value>No data available to export.</value>
  </data>
  <data name="Error_Generic" xml:space="preserve">
    <value>An unexpected error occurred.</value>
  </data>
  <data name="Error_InvalidDate" xml:space="preserve">
    <value>Invalid date format in CSV.</value>
  </data>
  <data name="Error_InvalidTextField" xml:space="preserve">
    <value>Text field contains invalid characters.</value>
  </data>
  <data name="Export_Canceled" xml:space="preserve">
    <value>Export canceled by user.</value>
  </data>
  <data name="Export_CanceledTitle" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Export_Success" xml:space="preserve">
    <value>Data successfully exported.</value>
  </data>
  <data name="Header_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Header_Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Header_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Header_FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Header_LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Header_SurName" xml:space="preserve">
    <value>Middle Name</value>
  </data>
  <data name="Import_Canceled" xml:space="preserve">
    <value>Import canceled by user</value>
  </data>
  <data name="Error_InvalidDateRange" xml:space="preserve">
    <value>Start date cannot be later than end date.</value>
  </data>
</root>